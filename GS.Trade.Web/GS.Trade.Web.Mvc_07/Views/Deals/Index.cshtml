@*@model IEnumerable<GS.Trade.Web.Mvc_07.ViewModel.ViewDeal>*@

@model PagedList.IPagedList<GS.Trade.Web.Mvc_07.ViewModel.ViewDeal>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {

        setTimeout(alertFunc, 60000);

        function alertFunc() {
            //alert("Hello Again");
            //console.debug("Hello from Ready");
            window.location.reload();
            // setTimeout(alertFunc, 15000);
        }
    });
</script>
<strong>
    @Html.ActionLink("Chart", "Chart", "Deals", new
       {
           account = ViewBag.Account,
           symbol = ViewBag.Symbol,
           ticker = ViewBag.Ticker,
           strategy = ViewBag.Strategy,
           timeInt = ViewBag.TimeInt,
           searchString = ViewBag.SearchString,
           lastDayChecked = ViewBag.LastDayChecked,
           charttype = ViewBag.LastDayChecked != null && ViewBag.LastDayChecked ? 10 : 1
       }, null)
    @Html.ActionLink("Report", "Report", "Deals", new
        {
            account = ViewBag.Account,
            symbol = ViewBag.Symbol,
            ticker = ViewBag.Ticker,
            strategy = ViewBag.Strategy,
            timeInt = ViewBag.TimeInt,
            searchString = ViewBag.SearchString,
            lastDayChecked = ViewBag.LastDayChecked,
            chartType = ViewBag.ChartType
        }, null)
</strong>
    <h5><b>@ViewBag.FullTitle</b></h5>
    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { 
            accountList = ViewBag.Account,
            symbolList = ViewBag.Symbol,
            tickerList = ViewBag.Ticker, 
            strategyList = ViewBag.Strategy,
            timeIntList = ViewBag.TimeInt,
            searchString = ViewBag.SearchString,
            lastDayChecked = ViewBag.LastDayChecked, 
            page }))


    @*@using (Html.BeginForm("Index", "Deals", FormMethod.Get))
    {
        <p>
            Account: @Html.DropDownList("accountList", "All")
            Symbol: @Html.DropDownList("symbolList", "All")
            Ticker: @Html.DropDownList("tickerList", "All")
            Strategy: @Html.DropDownList("strategyList", "All")
            TimeInt: @Html.DropDownList("timeIntList", "All")
            Search: @Html.TextBox("searchString")
            LastDay: @Html.CheckBox("lastDayChecked", true)
            <input class ="btn-primary" type="submit" value="Filter" />
        </p>
    }*@


    @using (Html.BeginForm("Index", "Deals", FormMethod.Get))
    {
        <table class="table">
            <tr>
                <th>Account</th>
                <th>Symbol</th>
                <th>Ticker</th>
                <th>Strategy</th>
                <th>TimeInt</th>
                <th>Search</th>
                <th>LastDay</th>
                <th></th>
            </tr>
            <tr>
                <td>@Html.DropDownList("accountList", "All")</td>
                <td>@Html.DropDownList("symbolList", "All")</td>
                <td>@Html.DropDownList("tickerList", "All")</td>
                <td>@Html.DropDownList("strategyList", "All")</td>
                <td>@Html.DropDownList("timeIntList", "All")</td>
                <td>@Html.TextBox("searchString")</td>
                <td>@Html.CheckBox("lastDayChecked", true)</td>
                <td><input class="btn-primary" type="submit" value="Filter" /></td>
            </tr>
        </table>
    }

<table class="table">
    <tr>
        <th>
            Account
        </th>
        <th>
            Ticker
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Strategy.Key)*@
            Strategy
        </th>
        <th>
            TimeInt
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Key)
            </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.Operation)*@
            Side
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.Status)
            </th>*@
        <th>
            @* @Html.DisplayNameFor(model => model.Quantity)*@
            Qty
        </th>

        <th>
            @*@Html.DisplayNameFor(model => model.PnL)*@
            PnL
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Price1)*@
            Price1
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Price2)*@
            Price2
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.PnL3)
            </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.FirstTradeDT)*@
            FirstTradeDT
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.FirstTradeNumber)
            </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.LastTradeDT)*@
            LastTradeDT
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.LastTradeNumber)
            </th>*@
        @*<th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Modified)
            </th>*@
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Account)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ticker)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Strategy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TimeInt)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Key)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Side)

            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.QtyStr)
            </td>
            <td>
                @Html.DisplayFor((modelItem => item.PnLAvgStr))
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.PriceAvgStr1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PriceAvgStr2)
            </td>

            @*<td>
                    @Html.DisplayFor(modelItem => item.PnL3)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.FirstTradeDT)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.FirstTradeNumber)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.LastTradeDT)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.LastTradeNumber)
                </td>*@
            @*<td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Modified)
                </td>*@
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                @Html.ActionLink("Details", "Details", new { id = item.Id })
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new
    {
        accountList = ViewBag.Account,
        symbolList = ViewBag.Symbol,
        tickerList = ViewBag.Ticker,
        strategyList = ViewBag.Strategy,
        timeIntList = ViewBag.TimeInt,
        searchString = ViewBag.SearchString,
        lastDayChecked = ViewBag.LastDayChecked,
        page
    }))

